name: Release Validation (Dry Run)

on:
  pull_request:
    branches:
      - master
    paths:
      - .github/tag_and_release/**
      - pyproject.toml
  workflow_dispatch:
    inputs:
      level:
        description: 'Release level to test'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - patch
          - minor
          - major

permissions:
  contents: read
  packages: read
  id-token: write  # For cosign keyless signing

concurrency:
  group: release-validate-${{ github.ref }}
  cancel-in-progress: true

jobs:
  intent-parse:
    uses: ./.github/workflows/rw_parse_release_intent.yaml
    with:
      level: ${{ inputs.level || 'auto' }}
      python: 'auto'
      docker: 'auto'
      docs: 'auto'
      notes: 'Validation test run'

  build_git-tag_and_create_github-release:
    uses: ./.github/workflows/rw_build_git-tag_and_create_github-release_v2.yaml
    needs: intent-parse
    with:
      version: "1.0.0-validation"  # Test version for validation
      debug_mode: true
    secrets:
      github_auth_token: ${{ secrets.GITHUB_TOKEN }}

  python-build-check:
    uses: ./.github/workflows/rw_python_package.yaml
    needs: build_git-tag_and_create_github-release
    with:
      operation: 'test'
      artifact-name: 'validation-python-package'

  docker-build-dockerhub:
    name: Validate DockerHub Build
    uses: ./.github/workflows/rw_docker_operations.yaml
    needs: build_git-tag_and_create_github-release
    with:
      operation: 'test'
      registry: 'docker.io'
      image-name: ${{ github.repository }}
      version: 'validation-test'
      health-check-port: '8000'
      health-check-path: '/health'
      enable-signing: true

  docker-build-ghcr:
    name: Validate GHCR Build
    uses: ./.github/workflows/rw_docker_operations.yaml
    needs: build_git-tag_and_create_github-release
    with:
      operation: 'test'
      registry: 'ghcr.io'
      image-name: ${{ github.repository }}
      version: 'validation-test'
      health-check-port: '8000'
      health-check-path: '/health'
      enable-signing: true

  docs-build:
    uses: ./.github/workflows/rw_docs_operations.yaml
    needs: intent-parse
    with:
      operation: 'test'
      upload-artifacts: true

  supply-chain-loopback:
    name: Security Scan (Supply Chain)
    uses: ./.github/workflows/rw_docker_operations.yaml
    needs: [docker-build-dockerhub, docker-build-ghcr]
    with:
      operation: 'security-scan'
      registry: 'docker.io'  # Use DockerHub build for security scan
      image-name: ${{ github.repository }}
      version: 'validation-test'
      enable-sbom: true
      enable-signing: true

  validation-summary:
    name: Validation Summary
    runs-on: ubuntu-latest
    needs: [intent-parse, python-build-check, docker-build-dockerhub, docker-build-ghcr, docs-build, supply-chain-loopback]
    if: always()
    steps:
      - name: Check validation results
        run: |
          echo "=== Release Validation Summary ==="
          echo ""
          echo "Intent Parsing: ${{ needs.intent-parse.result }}"
          echo "Python Build: ${{ needs.python-build-check.result }}"
          echo "DockerHub Build: ${{ needs.docker-build-dockerhub.result }}"
          echo "GHCR Build: ${{ needs.docker-build-ghcr.result }}"
          echo "Docs Build: ${{ needs.docs-build.result }}"
          echo "Supply Chain: ${{ needs.supply-chain-loopback.result }}"
          echo ""
          
          if [[ "${{ needs.intent-parse.result }}" == "success" && \
                "${{ needs.python-build-check.result }}" == "success" && \
                "${{ needs.docker-build-dockerhub.result }}" == "success" && \
                "${{ needs.docker-build-ghcr.result }}" == "success" && \
                "${{ needs.docs-build.result }}" == "success" && \
                "${{ needs.supply-chain-loopback.result }}" == "success" ]]; then
            echo "✅ All validation checks passed! Release process is ready."
            echo ""
            echo "Release Configuration:"
            echo "- Do Release: ${{ needs.intent-parse.outputs.do_release }}"
            echo "- Level: ${{ needs.intent-parse.outputs.level }}"
            echo "- Python: ${{ needs.intent-parse.outputs.python }}"
            echo "- Docker: ${{ needs.intent-parse.outputs.docker }}"
            echo "- Docs: ${{ needs.intent-parse.outputs.docs }}"
            echo "- Notes: ${{ needs.intent-parse.outputs.notes }}"
          else
            echo "❌ Some validation checks failed. Please review the logs above."
            exit 1
          fi
