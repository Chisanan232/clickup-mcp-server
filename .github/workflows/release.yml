# Production Release
name: release

on:
  push:
    branches:
      - master
    paths:
      - .github/tag_and_release/release-**
  workflow_dispatch:
    inputs:
      level:
        description: 'Release level'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - patch
          - minor
          - major
      python:
        description: 'Python package release'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - force
          - skip
      docker:
        description: 'Docker image release'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - force
          - skip
      docs:
        description: 'Documentation versioning'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - force
          - skip
      notes:
        description: 'Release notes'
        required: false
        default: ''
        type: string

permissions:
  contents: write
  packages: write
  id-token: write

concurrency:
  group: release-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  intent:
    uses: ./.github/workflows/rw_parse_release_intent.yaml
    with:
      level: ${{ inputs.level }}
      python: ${{ inputs.python }}
      docker: ${{ inputs.docker }}
      docs: ${{ inputs.docs }}
      notes: ${{ inputs.notes }}

  bump_version:
    name: Bump Version and Commit
    runs-on: ubuntu-latest
    needs: intent
    if: needs.intent.outputs.do_release == 'true'
    outputs:
      version: ${{ steps.bump.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python with UV
        uses: ./.github/actions/setup-python-uv
        with:
          install-dependencies: 'true'
          dependency-groups: 'release-ci'

      - name: Configure git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Bump version with uv
        id: bump
        run: |
          case "${{ needs.intent.outputs.level }}" in
            "patch")
              BUMP_FLAG="--bump patch"
              ;;
            "minor")
              BUMP_FLAG="--bump minor"
              ;;
            "major")
              BUMP_FLAG="--bump major"
              ;;
            *)
              BUMP_FLAG="--bump patch"  # Default to patch for auto
              ;;
          esac
          
          echo "Bumping version with: uv version $BUMP_FLAG"
          uv version $BUMP_FLAG
          
          # Get the new version
          NEW_VERSION=$(uv version --short)
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"
          
          # Commit the version bump
          git add pyproject.toml
          git commit -m "⬆️ chore: bump version to $NEW_VERSION [skip ci]"
          git push origin HEAD:${{ github.ref_name }}

  build_git-tag_and_create_github-release:
    uses: ./.github/workflows/rw_build_git-tag_and_create_github-release.yaml
    needs: bump_version
    secrets:
      github_auth_token: ${{ secrets.GITHUB_TOKEN }}

  release_python:
    uses: ./.github/workflows/rw_python_package.yaml
    needs: [intent, bump_version, build_git-tag_and_create_github-release]
    if: needs.intent.outputs.do_release == 'true' && needs.intent.outputs.python != 'skip'
    with:
      operation: 'publish-pypi'
      version: ${{ needs.bump_version.outputs.version }}
      artifact-name: 'python-package-production'

  release_docker:
    uses: ./.github/workflows/rw_docker_operations.yaml
    needs: [intent, bump_version, build_git-tag_and_create_github-release]
    if: needs.intent.outputs.do_release == 'true' && needs.intent.outputs.docker != 'skip'
    secrets:
      registry-token: ${{ secrets.GITHUB_TOKEN }}
    with:
      operation: 'push'
      version: ${{ needs.bump_version.outputs.version }}
      enable-sbom: true
      enable-signing: true

  release_docs:
    uses: ./.github/workflows/rw_docs_operations.yaml
    needs: [intent, bump_version, build_git-tag_and_create_github-release]
    if: needs.intent.outputs.do_release == 'true' && needs.intent.outputs.docs != 'skip'
    with:
      operation: 'version'
      version: ${{ needs.bump_version.outputs.version }}
      commit-changes: true
